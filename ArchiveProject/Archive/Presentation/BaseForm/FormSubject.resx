<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gridViewCommandColumn1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAASCAYAAABb0P4QAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vQAADr0BR/uQrQAAA0dJREFUOE+FlGtIU2EYxw/1xexeBmlZeU0tlcxArYyI0oKMQiqqDwVBatKVLtCF
        JCj1g0qaFl0+FaGg9cH6UJEYXc3mtjO3ecOlbmeam23pXNvZ/j3n9dS8oT84cM7zPu//fXie/3s4TIHX
        C9jcdvx0WTAkOuTo1EwQFL1uvLbV4WLXNaRq0xCsjkOwJh6r+DhktGYiXyjBl8HvlCfKO8YyRtDkMiPX
        cAahqjicMJxGlaWaNjdCM6zDe/sn3Ot7gN3tBxHJx6PYXMr2eLwe6Ifb8ML6CtXWWp9gs0OHLS27sFG/
        A/yQTo5OzsuBWpQLd1krbglFCGteD04RgHA+cUTQJtqxv/0InX4AfW4r2zQd3X9MONKZDT9lIGYpg3DV
        eBsaKooJVllqkKhNpSQjS54OxZAaKfp0zFGuxAzFEpT0VsgrUg9pkkm67bjUc50F3tBAyvoesvfJqLd/
        QHxzKgkFIFqbjAjNBjzufyqvkuCA+xf8FEHocHai3vYZAepw+DUF4YapgM7yyGkjlJjvYZEqHHOaViBO
        uxmNQ0oUmsuwoy0TA+4BlsP9cPZgJVnDKTqR3XUBXONsdupcVQhumYpZksQNYwE7SHqW05S/DSpY/Jm1
        BsF8LIwugX1zBucPrKAAczFxpvsyZioWIlSzDtz3eaj4+QjHyUpcoz8CVBFYo90E3qFnuRKVJLhUHQ0T
        DUmCs9JU/ZuWo91pYAHRIyLLcB4LlGFkh0QsUa2mNkRgGb+WxFKgdbSyvH8UmcuxSb8TFtkdnIccv1aT
        hEK6AaPJox4GqmMQQpUupsqSaKpG10gVo9nTcRh5QiHcGLk5zDb3ex9iqy4ddvE3C0p46QbkC3cwn3qZ
        rE+D4OqTV3xIVzSmORkff3+VI7Jgl9OEjbptyDGcklzkgz5K6TDJAeMR/pixvTUD57qvwOEZlqOyoMRb
        ez2ZOwVZ5H6721fpZEg3IpYqO9BxFEZ5GP/4LyjRQFbY3bIX68ljN02F+DTYgH6XlSpwoMcp4J29Drld
        F8lWCThpOEtVTmzDGEEJKxn0SX8l9rUfQqAqCkv5aITyCTSYSESR0DFDDp7TX8Ur22w8EwRH88ttg2T8
        TvKq9DNwiL5eTQ7wF0mjxbQwl80mAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="gridViewCommandColumn2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAASCAYAAABb0P4QAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAArNJREFUOE+tk9lPE1EUxv1fjIiIaDSRWhTZ1LQ1AdlBiPKkAq+i4pM+iYaocScI
        qAkqqKC88QDRSPTF6azpdKZ0oWIJVspSKDTq55k7tUhiYyR8ycmdu8xvzpnz3U1IoTjF8vQ0YpqGmK6z
        cflLCCs/vpsHUigl0D08DM6ag0/7rHDaHOD254LLtkLu6k6c+LuSwFg8juDEBCaDQUwtRiHV1EIqLoHP
        64XP54OfQmlqBl9QhNBMBJOfJxH0B7AQiyUIppLAsCCCLy0Dt3sP+NyDcG7fAYGyEo/YaZ5How1CXgGt
        Z5n7ey3gCgoRGh3FzwTDEAMuTYXgrKwCl5YOPjMLzoxMcOkZcG7dBm5zGsUWFk7aZ+u0z87RM2d3IKIo
        DGbIBFIJ8oMOyLX14K0HoN66DX1wEHr/C7gfdkF/3gd3zyPoT5/B8/oN3I+fQMjNh2g/CvnOXcxNBBjM
        0Oo/pFCutEG02el/eaH19UF/+Qp+v58BvJIEz8gI3J2dCEQikCoqIZ06jXnz9aSSwIWlJUgXWumrDgYR
        S0ohn2zA+Nh78JYc+kA/XJcug8+2IBD+CqmqBsLxOszMziYIptYA5daLrAwDKFVVQznTiPEPHyHkF0Eb
        GIBKFfB5hQT8xvaFunpE5v4FtCWA1TVQGpsYUCw8BN0Atl1ltmFAauI6gGaGa4CU7TqBtQRsXgUODsBF
        QOG/M3SYQLH4GMQTDfCOjUGwWFnXVWqKYehAOMwqYMCUTVmkLp9tgVB0mGzjh0Ye1IeGGFzr7YVPkeF5
        +w5uussBykqiWyUQNEIW+lNJ4DzdSfnGTXA7d0GhTDUysdrRwUyuEkQlA7vu3Wfrrmvt4Oi2iOfOI5yq
        ZEPR+Aq83T1wkyXUsgqo5UZUwlVazsbfc5XmnvbriESjiTdXtQa4EdpgIPAL6W+x5ZnqXIIAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>